#
# bspwm hotkeys
#

# close window node
super + w
	bspc node -c


# toggle window state between tiled (default) and pseudo_tiled or floating or fullscreen
super + {p,s,f}
    state={pseudo_tiled,floating,fullscreen}; \
    bspc query -W -w "focused.$\{state\}" > /dev/null && state=tiled; \
    bspc node -t "$state"

# cycle desktop layout between monocle and tiled
super + n
	bspc desktop -l next


# switch focus between last window with tab, or desktop with `
super + {Tab,grave}
	bspc {node,desktop} -f last

# focus on next floating or next tiled window 
super + {d,y}
	bspc node -f {next.floating,next.tiled}


# rotate window tree on desktop
super + {_,shift +} r
	bspc desktop -R {90,270}

# circulate the leaves of desktop tree backward or forward
super + comma
	bspc node -f prev & \
	bspc desktop -C backward

# circulate the leaves of desktop tree backward or forward
super + period
  bspc node -f next & \
	bspc desktop -C forward


# equalise or balance windows on current desktop
super + {_,alt +}b
	bspc desktop {-E,-B}


# swap focused window with last focused window on any desktop
super + apostrophe
	bspc node -s last

# swap focused window with largest tiled node on the same desktop
super + m
	bspc node -s biggest


# move window to previous or next desktop
super + alt + {Left,Right}
	bspc node -d {prev,next}

# move window to previous or next desktop and follow with focus
super + shift + {Left,Right}
	bspc node -d {prev,next} -f

# focus on desktop number selected
super + {1-9,0}
	bspc desktop -f ^{1-9,10}

# move window to selected desktop number and follow
super + shift + {1-9,0}
	bspc node -d ^{1-9,10} -f

# move window to selected desktop number
super + alt + {1-9}
	bspc node -d ^{1-9}


# focus on the next monitor
super + o
	bspc monitor -f next

# move window between monitors
super + alt + o
  bspc node -m next

# move window between monitors and follow
super + shift + o
	bspc node -m next -f


# focus on previous or next desktop
super + {Left,Right}
	bspc desktop -f {prev,next}

# bubble (move) desktop left and right
super + bracket{left,right}
	bspc desktop focused -b {prev,next}


# focus to or swap window with direction given
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}


# tofix - i use the mouse instead

# alter size of window (only works on left and bottom edges)
super + alt + {h,j,k,l}
	bspc node -e {west -10,south +10,south -10,west +10}

# make smaller
#super + alt + shift + {h,j,k,l}
#	bspc node -e {east -10,north +10,north -10,east +10}


# preselect section of window edge
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# cancel preselect for window or desktop
super + ctrl + {_,shift + }space
	bspc {node -p cancel,desktop -c}


# set the desktop split ratio
super + ctrl + {1-9}
	bspc node -r 0.{1-9}



~button1
	bspc pointer -g focus

# move, resize one size or resize two sides with mouse click and drag
super + button{1-3}
	bspc pointer -g {move,resize_side,resize_corner}

# motion
super + !button{1-3}
	bspc pointer -t %i %i

# release
super + @button{1-3}
	bspc pointer -u

super + button{4,5}
  bspc desktop -f {prev,next}


#
# wm independent hotkeys
#

#super + Return
#  urxvtc

# open a urxvtc terminal window in a specific direction
super + Return
  if [ $(bspc query -W -w next) ]; then urxvtc; else bspc rule -a \* --one-shot split_dir=down; urxvtc; fi 

super + ctrl + Return
#	rulc -a true floating=true duration=1 | urxvtc
  bspc rule -a \* --one-shot state=floating | urxvtc

super + alt + space
  dmenu_run -h 22
  # xboomx

super + space
  ~/bin/dmenu_run.pl -h 22

# make sxhkd reload its configuration files:
super + Escape  
  pkill -USR1 -x sxhkd


# quit bspwm or save layout and quit
super + alt + {_,shift + }Escape
  {bspc query -T > "$BSPWM_TREE"; \
    bspc query -H > "$BSPWM_HISTORY"; \
    bspc query -S > "$BSPWM_STACK"; \
    bspc quit,\
   bspc quit 1}
